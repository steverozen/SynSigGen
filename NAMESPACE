# Generated by roxygen2: do not edit by hand

S3method(plot,correlation.scatterplot)
export(AddAllScripts)
export(CopyBestSignatureAnalyzerResult)
export(Create.syn.many.types)
export(CreateAndWriteCatalog)
export(CreateMixedTumorTypeSyntheticData)
export(CreateMultiModalMuSigOutput)
export(CreateRandomSAAndSPSynCatalogs)
export(CreateSBS1SBS5CorrelatedSyntheticData)
export(CreateSynCatalogs)
export(Diff4SynDataSets)
export(FixSASigNames)
export(GenSBS1SBS5Exposure)
export(GenerateSynFromReal)
export(GenerateSyntheticExposures)
export(GetSynSigParamsFromExposures)
export(MapSPToSASignatureNamesInExposure)
export(Match1Sig)
export(MatchSigs1Direction)
export(MatchSigs2Directions)
export(MatchSigsAndRelabel)
export(MergeExposures)
export(OLDRunSignatureAnalyzerAttributeOnly)
export(OutDir)
export(PlotCatCOMPOSITE)
export(ReadAndAnalyzeExposures)
export(ReadAndAnalyzeSigs)
export(ReadCatCOMPOSITE)
export(ReadExposure)
export(ReadSigProfilerExposure)
export(ReadSigProfilerSig96)
export(ReadSynapseExposure)
export(RunMutationalPatterns)
export(RunMutationalPatternsAttributeOnly)
export(RunSignatureAnalyzerAttribution)
export(RunSignatureAnalyzerOnFile)
export(RunYAPSAAttributeOnly)
export(RundeconstructSigsAttributeOnly)
export(Runhdp)
export(RunhdpAttributeOnly)
export(Runsigfit)
export(RunsigfitAttributeOnly)
export(RunsigneR)
export(SAAndSPSynDataOneCAType)
export(SAMultiRunOneCatalog)
export(SetNewOutDir)
export(SignatureAnalyzer4MatchedCatalogs)
export(SignatureAnalyzerPrepHyper1Secondary)
export(SignatureAnalyzerPrepHyper4)
export(TEMPRunSignatureAnalyzerOnFile)
export(WriteCatCOMPOSITE)
export(WriteExposure)
export(WriteSynSigParams)
importFrom(ICAMS,Collapse1536To96)
importFrom(ICAMS,PlotCatDNS78ToPdf)
importFrom(ICAMS,PlotCatIDToPdf)
importFrom(ICAMS,PlotCatSNS1536ToPdf)
importFrom(ICAMS,PlotCatSNS96ToPdf)
importFrom(ICAMS,ReadCatSNS96)
importFrom(ICAMS,WriteCatSNS96)
importFrom(lsa,cosine)
importFrom(parallel,mclapply)
importFrom(stats,rbinom)
importFrom(stats,rnorm)
importFrom(stats,runif)
importFrom(stats,sd)
importFrom(utils,capture.output)
importFrom(utils,read.csv)
importFrom(utils,read.table)
importFrom(utils,write.csv)
importFrom(utils,write.table)
